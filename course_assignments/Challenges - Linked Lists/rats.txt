#include<iostream>
using namespace std;
bool ratmaze(char maze[11][11],int sol[11][11],int i,int j,int N,int M) {
    if(i==N && j==M) {
        sol[i][j]=1;
        for(int x=0;x<=N;x++) {
            for(int y=0;y<=M;y++) {
            cout<<sol[x][y]<<" ";
            }
        cout<<endl;
        }
    return true;
    }
    if(i>N || j>M || i<0 || j<0)
        return false;
    if(maze[i][j]=='X')
        return false;
    sol[i][j]=1;
    bool rightSuccess, downSuccess, topSuccess, leftSuccess;

    if(sol[i+1][j]==0)
        downSuccess = ratmaze(maze,sol,i+1,j,N,M);

    if(sol[i][j+1]==0)
        rightSuccess = ratmaze(maze,sol,i,j+1,N,M);

    if(sol[i-1][j]==0)
        topSuccess = ratmaze(maze,sol,i-1,j,N,M);

    if(sol[i][j-1]==0)
        leftSuccess = ratmaze(maze,sol,i,j-1,N,M);

    if(leftSuccess || rightSuccess || topSuccess || downSuccess)
        return true;

    sol[i][j] = 0;
    return false;
}
int main() {
	int n,m;
	cin>>n>>m;
	char maze[11][11];
	for(int i=0;i<n;i++) {
	    for(int j=0;j<m;j++)
	        cin>>maze[i][j];
	}
	int sol[11][11]= {0};
	n--; m--;
	bool Y = ratmaze(maze,sol,0,0,n,m);
	if(Y==0)
	    cout<<"NO PATH FOUND";
	return 0;
}